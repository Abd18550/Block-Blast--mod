name: Android CI - Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build-debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK (cmdline-tools)
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: latest
          accept-android-sdk-licenses: true

      - name: Install required SDK packages
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - name: Set up Gradle (provision Gradle without wrapper)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9

      - name: Generate Gradle wrapper for the project
        working-directory: blockblast-assistant
        run: |
          gradle wrapper --gradle-version 8.9

      - name: Build debug APK
        working-directory: blockblast-assistant
        run: |
          ./gradlew --no-daemon --stacktrace :app:assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: BlockBlastAssistant-debug-apk
          path: blockblast-assistant/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

  # Optional: release build with signing (requires secrets)
  release-signed:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: build-debug
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: latest
          accept-android-sdk-licenses: true

      - name: Install required SDK packages
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0"

      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9

      - name: Generate Gradle wrapper
        working-directory: blockblast-assistant
        run: gradle wrapper --gradle-version 8.9

      - name: Prepare keystore from secrets (if provided)
        working-directory: blockblast-assistant
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
            echo "Keystore created"
          else
            echo "ANDROID_KEYSTORE_BASE64 secret not provided; skipping keystore prep"
          fi

      - name: Build release (signed if keystore provided)
        working-directory: blockblast-assistant
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          if [ -f keystore.jks ]; then
            ./gradlew --no-daemon :app:assembleRelease \
              -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks \
              -Pandroid.injected.signing.store.password=$ANDROID_KEYSTORE_PASSWORD \
              -Pandroid.injected.signing.key.alias=$ANDROID_KEY_ALIAS \
              -Pandroid.injected.signing.key.password=$ANDROID_KEY_PASSWORD
          else
            echo "Keystore not provided â€” building unsigned release"
            ./gradlew --no-daemon :app:assembleRelease
          fi

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: BlockBlastAssistant-release-apk
          path: blockblast-assistant/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
